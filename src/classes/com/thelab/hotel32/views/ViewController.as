package com.thelab.hotel32.views{	import com.thelab.hotel32.helpers.Logger;	import com.thelab.hotel32.nav.NavigationController;	import com.thelab.hotel32.views.amenities.AmenitiesView;	import com.thelab.hotel32.views.video.VideoView;		import flash.display.DisplayObject;	import flash.display.Sprite;	import flash.external.ExternalInterface;	import flash.net.navigateToURL;		import org.osflash.signals.Signal;	import org.osflash.signals.natives.NativeSignal;
	import com.thelab.hotel32.views.rooms.RoomsView;
	import com.thelab.hotel32.views.lounge.LoungeView;
	public class ViewController extends Sprite	{		private static var instance						: ViewController;		private static var allowInstantiation			: Boolean;				public var ready								: Signal;				private var _currentView						: BasicView;				private var viewArray							: Array;		private var tempArray							: Array;		private var loadPhase							: int;				public var videoView							: VideoView;		public var amenitiesView						: AmenitiesView;		public var roomsView							: RoomsView;		public var loungeView							: LoungeView;		public var spaView								: SpaView;		public var foodView								: FoodView;		public var casinoView							: CasinoView;		public var shoppingView							: ShoppingView;		public var offersView							: OffersView;		public var preloaderView						: PreloaderView;				public static const VIDEO_VIEW_NAME				: String = "video";		public static const AMENITIES_VIEW_NAME			: String = "amenities";		public static const ROOMS_VIEW_NAME				: String = "rooms";		public static const LOUNGE_VIEW_NAME			: String = "lounge32";		public static const SPA_VIEW_NAME				: String = "spa-salon-fitness";		public static const FOOD_VIEW_NAME				: String = "food-and-drink";		public static const CASINO_VIEW_NAME			: String = "casino";		public static const SHOPPING_VIEW_NAME			: String = "shopping";		public static const OFFERS_VIEW_NAME			: String = "offers";		public static const PRELOADER_VIEW_NAME			: String = "preloader";				public function ViewController(name:String = "ViewController")		{			if (!allowInstantiation) {				throw new Error("Error: Instantiation failed: Use ViewController.getInstance()");			} else {				this.name = name;				init();			}		}				public static function getInstance(name:String = "ViewController"):ViewController {			if (instance == null) {				allowInstantiation = true;				instance = new ViewController(name);				allowInstantiation = false;			}			return instance;		}				private function init():void		{			ready = new Signal();			viewArray = new Array();		}				public function setup():void		{									// create the views			videoView = new VideoView(VIDEO_VIEW_NAME);			amenitiesView = new AmenitiesView(AMENITIES_VIEW_NAME);			roomsView = new RoomsView(ROOMS_VIEW_NAME);			loungeView = new LoungeView(LOUNGE_VIEW_NAME);			spaView = new SpaView(SPA_VIEW_NAME);			foodView = new FoodView(FOOD_VIEW_NAME);			casinoView = new CasinoView(CASINO_VIEW_NAME);			shoppingView = new ShoppingView(SHOPPING_VIEW_NAME);			offersView = new OffersView(OFFERS_VIEW_NAME);						// phase one			viewArray.push(videoView);			viewArray.push(amenitiesView);			viewArray.push(roomsView);			viewArray.push(loungeView);						// these will be in phase two load			viewArray.push(spaView);			viewArray.push(foodView);			viewArray.push(casinoView);			viewArray.push(shoppingView);			viewArray.push(offersView);									preloaderView = new PreloaderView(PRELOADER_VIEW_NAME);			preloaderView.halfLoaded.addOnce(preloaderView.handleHalfLoaded);			preloaderView.allLoaded.addOnce(preloaderView.handleAllLoaded);			preloaderView.beginPhaseTwo.addOnce(loadPhaseTwo);			preloaderView.preloadCompleted.addOnce(registerViewsWithNavController);						preloaderView.ready.addOnce( function() 			{				AppStage.getInstance().addToStage(preloaderView);				show(preloaderView);				//				tempArray = new Array();								loadPhaseOne();				//setupRemainingViews();			});			preloaderView.setup();		}				private function loadPhaseOne():void		{			tempArray = viewArray.slice(0, 4).reverse();			loadPhase = 1;			setupNextView();		}				private function loadPhaseTwo():void		{			tempArray = viewArray.slice(4, viewArray.length-1).reverse();			loadPhase = 2;			setupNextView();		}				public function registerBookingController(sig:Signal):void		{			sig.add(handleBookingSignal);		}				private function handleBookingSignal(state:Boolean):void		{			Logger.log("ViewController: booking screen is " + state);			switch (currentView)			{				case videoView :					videoView.handleBookingScreen(state);						break;											}		}				private function setupNextView():void		{			if (tempArray.length > 0)			{				var v:BasicView = tempArray.pop();				Logger.log("setting up " + v, 4);				v.ready.addOnce( function() {					AppStage.getInstance().addToStage(v);					setupNextView();				});				v.setup();			}			else			{				if (loadPhase == 1)				{					preloaderView.halfLoaded.dispatch();				} 				else				{					preloaderView.allLoaded.dispatch();				}			}		}				private function preloadCompleted():void		{			registerViewsWithNavController();			ready.dispatch();		}				private function registerViewsWithNavController():void		{			for each (var v:BasicView in viewArray)			{				v.navigationUpdater.add(NavigationController.getInstance().handleUpdateFromView);			}									ready.dispatch();		}				private function handleNavSignal(id:String):void		{			//		}				public function show(newView:BasicView):void		{			if (currentView != null)			{				currentView.transitionOut();				newView.transitionIn();				currentView = newView;			} 				else			{				newView.transitionIn();				currentView = newView;			}		}				public function getViewFromName(bindName:String):BasicView		{			switch (true)			{				case (bindName == "amenities" || bindName == AMENITIES_VIEW_NAME) :					return amenitiesView;					break;								case (bindName == "rooms" || bindName == ROOMS_VIEW_NAME) :					return roomsView;					break;								case (bindName == "lounge32" || bindName == LOUNGE_VIEW_NAME) :					return loungeView;					break;								case (bindName == "spa" || bindName == SPA_VIEW_NAME) :					return spaView;					break;								case (bindName == "food" || bindName == FOOD_VIEW_NAME) :					return foodView;					break;								case (bindName == "casino" || bindName == CASINO_VIEW_NAME ) :					return casinoView;					break;								case (bindName == "shopping" || bindName == SHOPPING_VIEW_NAME ) :					return shoppingView;					break;								case (bindName == PRELOADER_VIEW_NAME) :					return preloaderView;					break;								case (bindName == VIDEO_VIEW_NAME) :					return videoView;					break;								default :					return null;					break;			}		}				public function showFirstView():void		{			//show(videoView);			show(preloaderView);		}		public function get currentView():BasicView		{			return _currentView;		}		public function set currentView(value:BasicView):void		{			_currentView = value;		}	}}