package com.thelab.hotel32.assets.fonts{	import flash.display.Sprite;	import flash.events.Event;	import flash.text.Font;	import flash.text.TextFormat;	import flash.text.TextFormatAlign;
		public class FontLibrary extends Sprite	{				private static var instance					: FontLibrary;		private static var allowInstantiation		: Boolean;				private var arialFont						: Font;		private var arialBoldFont					: Font;				private var arialFormat						: TextFormat;		private var arialBoldFormat					: TextFormat;				public static const ARIAL_FORMAT			: String = Arial.NAME;		public static const ARIAL_BOLD_FORMAT 		: String = ArialBold.NAME;		public static const FUTURA_MEDIUM_FORMAT	: String = FuturaMedium.NAME;		public static const FUTURA_STD_BOOK			: String = FuturaStdBook.NAME;						public static const DEFAULT_FONT_SIZE : Number = 14;				public function FontLibrary(name:String = "FontLibrary") 		{			if (!allowInstantiation) {				throw new Error("Error: Instantiation failed: Use Fonts.getInstance()");			} else {				this.name = name;				init();			}		}				public static function getInstance(name:String = "FontLibrary"):FontLibrary {			if (instance == null) {				allowInstantiation = true;				instance = new FontLibrary(name);				allowInstantiation = false;			}			return instance;		}				private function init():void		{						arialFont = new Arial();			arialBoldFont = new ArialBold();		}				public function getFormat(theFont:String):TextFormat 		{			var theFormat:TextFormat = new TextFormat();			theFormat.size = FontLibrary.DEFAULT_FONT_SIZE;			theFormat.font = theFont;			theFormat.color = 0xFFFFFF;			theFormat.align = TextFormatAlign.LEFT;			return theFormat;		}	}}